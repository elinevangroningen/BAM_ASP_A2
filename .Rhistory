1L, 9L, 13L, 9L, 1L, 9L, 10L, 9L, 9L, 1L, 1L, 9L, 13L, 7L, 13L,
9L, 9L, 13L, 9L, 10L, 9L, 1L, 9L, 13L, 9L, 2L, 9L, 9L, 9L, 13L,
9L, 1L, 9L, 13L, 13L, 3L, 9L, 13L, 13L, 9L, 9L, 9L, 1L, 13L,
13L, 13L, 1L, 13L, 9L, 9L, 1L, 13L, 1L, 9L, 9L, 9L, 1L, 13L,
9L, 13L, 9L, 9L, 8L, 1L, 9L, 1L, 13L, 13L, 1L, 13L, 13L, 1L,
1L, 9L, 9L, 1L, 9L, 9L, 13L, 13L, 9L, 1L, 9L, 9L, 1L, 1L, 9L,
13L, 13L, 6L, 1L, 13L, 1L, 13L, 9L, 13L, 1L, 13L, 9L, 13L, 9L,
13L, 9L, 7L, 13L, 10L, 13L, 9L, 10L, 9L, 9L, 9L, 9L, 10L, 9L,
11L, 1L, 11L, 1L, 13L, 9L, 9L, 1L, 13L, 13L, 9L, 9L, 9L, 6L,
9L, 13L, 9L, 10L, 13L, 13L, 1L, 9L, 11L, 13L, 9L, 11L, 10L, 13L,
13L, 9L, 9L, 13L, 1L, 13L, 1L, 13L, 13L, 9L, 9L, 9L, 9L, 13L,
10L, 9L, 13L, 13L, 1L, 9L, 9L, 9L, 1L, 9L, 9L, 13L, 6L, 9L, 9L,
13L, 1L, 9L, 1L, 13L, 13L, 1L, 13L, 9L, 9L, 9L, 1L, 9L, 13L,
9L, 13L, 13L, 9L, 9L, 13L, 9L, 9L, 1L, 9L, 1L, 13L, 9L, 1L, 13L,
13L, 9L, 13L, 13L, 9L, 1L, 13L, 9L, 9L, 1L, 9L, 1L, 9L, 9L, 13L,
9L, 9L, 9L, 9L, 13L, 1L, 9L, 13L, 1L, 9L, 1L, 13L, 13L, 13L,
1L, 9L, 9L, 9L, 9L, 9L, 1L, 9L, 1L, 13L, 13L, 1L, 13L, 6L, 1L,
1L, 1L, 13L, 13L, 13L, 1L, 13L, 9L, 9L, 1L, 10L, 13L, 1L, 10L,
9L, 13L, 9L, 13L, 1L, 1L, 13L, 13L, 9L, 9L, 13L, 13L, 9L, 9L,
10L, 9L, 13L, 11L, 9L, 1L, 9L, 1L, 13L, 10L, 1L, 9L, 1L, 9L,
1L, 9L, 1L, 9L, 9L, 9L, 13L, 13L, 9L, 1L, 13L, 13L, 9L, 13L,
13L, 1L, 9L, 9L, 9L, 13L, 9L, 13L, 1L, 13L, 9L, 13L, 13L, 9L,
1L, 9L, 9L, 9L, 9L, 9L, 13L, 13L, 13L, 13L, 13L, 1L, 13L, 1L,
9L, 1L, 13L, 1L, 9L, 9L, 1L, 1L, 13L, 6L, 13L, 9L, 13L, 1L, 9L,
1L, 13L, 1L, 9L, 9L, 9L, 9L, 9L, 9L, 13L, 1L, 1L, 9L, 9L, 13L,
1L, 13L, 9L, 9L, 10L, 1L, 10L, 9L, 9L, 13L, 9L, 1L, 9L, 9L, 9L,
9L, 9L, 13L, 9L, 1L, 1L, 9L, 13L, 13L, 9L, 1L, 1L, 1L, 9L, 9L,
9L, 13L, 9L, 13L, 9L), .Label = c("Bug", "Dragon", "Electric",
"Fighting", "Fire", "Ghost", "Grass", "Ground", "Normal", "Poison",
"Psychic", "Rock", "Water"), class = "factor"), Type2 = structure(c(5L,
2L, 1L, 2L, 1L, 6L, 1L, 1L, 5L, 1L, 2L, 2L, 5L, 1L, 1L, 1L, 1L,
2L, 6L, 2L, 6L, 1L, 2L, 2L, 2L, 3L, 5L, 2L, 5L, 2L, 1L, 1L, 2L,
2L, 2L, 2L, 2L, 2L, 2L, 2L, 1L, 1L, 1L, 2L, 1L, 2L, 2L, 2L, 2L,
2L, 1L, 2L, 1L, 5L, 2L, 3L, 2L, 1L, 2L, 2L, 1L, 3L, 2L, 2L, 2L,
1L, 2L, 5L, 5L, 1L, 2L, 1L, 3L, 5L, 5L, 2L, 2L, 2L, 2L, 2L, 1L,
2L, 1L, 5L, 2L, 5L, 2L, 2L, 2L, 2L, 5L, 6L, 5L, 5L, 5L, 2L, 1L,
1L, 5L, 2L, 5L, 2L, 1L, 1L, 2L, 2L, 1L, 1L, 1L, 1L, 2L, 2L, 2L,
5L, 2L, 2L, 5L, 2L, 2L, 1L, 1L, 5L, 2L, 1L, 1L, 5L, 5L, 2L, 2L,
1L, 2L, 2L, 2L, 6L, 2L, 2L, 2L, 2L, 5L, 2L, 6L, 2L, 1L, 1L, 1L,
2L, 1L, 2L, 2L, 6L, 2L, 1L, 2L, 2L, 6L, 2L, 5L, 2L, 2L, 2L, 1L,
2L, 2L, 1L, 2L, 1L, 1L, 5L, 5L, 2L, 5L, 2L, 2L, 2L, 2L, 2L, 2L,
1L, 2L, 5L, 2L, 2L, 2L, 1L, 1L, 1L, 5L, 1L, 2L, 1L, 2L, 1L, 1L,
2L, 2L, 2L, 1L, 2L, 1L, 2L, 2L, 6L, 2L, 1L, 2L, 2L, 1L, 1L, 5L,
2L, 6L, 2L, 2L, 1L, 5L, 5L, 2L, 5L, 2L, 6L, 1L, 2L, 1L, 1L, 1L,
2L, 2L, 2L, 1L, 1L, 1L, 2L, 1L, 2L, 2L, 1L, 5L, 2L, 2L, 2L, 1L,
2L, 1L, 2L, 2L, 1L, 1L, 2L, 2L, 5L, 1L, 5L, 2L, 2L, 5L, 1L, 2L,
1L, 5L, 2L, 2L, 1L, 6L, 5L, 5L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L,
2L, 1L, 2L, 2L, 1L, 2L, 2L, 2L, 6L, 2L, 2L, 2L, 2L, 5L, 1L, 1L,
1L, 1L, 2L, 5L, 2L, 1L, 2L, 1L, 1L, 2L, 1L, 5L, 2L, 2L, 2L, 1L,
2L, 5L, 1L, 5L, 2L, 2L, 2L, 6L, 1L, 2L, 5L, 2L, 1L, 1L, 5L, 2L,
2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 5L, 2L, 1L, 1L, 3L, 2L, 5L,
2L, 1L, 2L, 1L, 2L, 5L, 1L, 1L, 2L, 2L, 5L, 5L, 6L, 5L, 5L, 1L,
1L, 2L, 5L, 1L, 1L, 2L, 5L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L,
5L, 2L, 5L, 1L, 1L, 2L, 1L, 1L, 1L, 1L, 2L, 1L, 2L, 2L, 2L, 5L,
2L, 5L, 1L, 2L, 1L, 2L, 2L, 1L, 1L, 2L, 2L, 1L, 2L, 1L, 2L, 1L,
2L, 2L, 5L, 2L, 2L, 2L, 5L, 5L, 5L, 5L, 2L, 5L, 1L, 2L, 2L, 2L,
2L, 2L, 2L, 2L, 2L, 2L, 5L, 2L, 1L, 1L, 2L, 5L, 5L, 5L, 1L, 5L,
1L, 5L, 2L, 2L, 2L, 5L, 1L, 2L, 2L, 1L, 1L, 2L, 5L, 5L, 5L, 2L,
2L, 5L, 2L, 1L, 2L, 2L, 2L, 1L, 2L, 5L, 2L, 2L, 2L, 2L, 1L, 1L,
1L, 2L, 1L, 1L, 1L, 6L, 2L, 1L, 5L, 6L, 5L, 2L, 2L, 1L, 1L, 5L,
2L, 2L, 2L, 2L, 2L, 1L, 2L, 2L, 2L, 5L, 1L, 2L, 5L, 2L, 2L, 1L,
6L, 5L, 1L, 2L, 1L, 1L, 2L, 1L, 1L, 2L, 2L, 2L, 1L, 2L, 5L, 1L,
5L, 3L, 2L, 5L, 1L, 2L, 2L, 2L, 2L, 5L, 2L, 5L, 2L, 2L, 2L, 2L,
2L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 1L, 1L, 2L, 2L, 2L, 5L, 2L,
5L, 2L, 5L, 5L, 2L, 5L, 1L, 5L, 1L, 1L, 1L, 5L, 2L, 2L, 1L, 2L,
5L, 2L, 2L, 2L, 5L, 1L, 1L, 5L, 2L, 1L, 5L, 2L, 6L, 1L, 2L, 2L,
1L, 5L, 2L, 2L, 2L, 2L, 6L, 1L, 2L, 2L, 1L, 2L, 2L, 1L, 2L, 1L,
2L, 1L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 1L, 2L, 2L, 2L, 2L, 2L, 2L,
2L, 2L, 5L, 5L, 1L, 2L, 2L, 2L, 2L, 2L, 2L, 5L, 1L, 5L, 5L, 1L,
3L, 5L, 2L, 5L, 5L, 2L, 5L, 2L, 2L, 1L, 2L, 5L, 2L, 2L, 5L, 1L,
2L, 1L, 2L, 5L, 2L, 5L, 2L, 1L, 2L, 5L, 2L, 1L, 5L, 2L, 2L, 1L,
2L, 2L, 1L, 1L, 5L, 5L, 5L, 5L, 5L, 1L, 2L, 2L, 2L, 1L, 5L, 5L,
2L, 2L, 2L, 1L, 2L, 5L, 2L, 1L, 1L, 2L, 1L, 1L, 2L, 5L, 1L, 2L,
2L, 2L, 2L, 2L, 2L, 2L, 1L, 1L, 2L, 1L, 1L, 1L, 1L, 2L, 1L, 2L,
2L, 1L, 1L, 2L, 1L, 1L, 5L, 2L, 5L, 5L, 2L, 2L, 2L, 1L, 1L, 2L,
5L, 1L, 5L, 1L, 2L, 2L, 2L, 2L, 1L, 2L, 1L, 2L, 2L, 2L, 2L, 6L,
1L, 2L, 1L, 1L, 1L, 5L, 2L, 2L, 2L, 2L, 2L, 1L, 1L, 1L, 1L, 5L,
1L, 2L, 1L, 2L, 2L, 1L, 1L, 1L, 1L, 8L, 1L, 2L, 1L, 5L, 1L, 5L,
5L, 2L, 2L, 1L, 5L, 7L, 1L, 2L, 1L, 2L, 2L, 5L, 1L, 2L, 1L, 2L,
2L, 2L, 2L, 1L, 5L, 2L, 5L, 2L, 2L, 9L, 2L, 6L, 1L, 5L, 2L, 2L,
5L, 1L, 1L, 3L, 5L, 5L, 5L, 1L, 1L, 2L, 1L, 1L, 2L, 1L, 2L, 2L,
2L, 2L, 1L, 2L, 2L, 1L, 1L, 2L, 2L, 2L, 2L, 5L, 1L, 2L, 2L, 2L,
2L, 6L, 5L, 2L, 1L, 5L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 2L, 5L,
2L, 1L, 2L, 1L, 2L, 5L, 2L, 2L, 2L, 2L, 2L, 2L, 1L, 2L, 1L, 2L,
2L, 2L, 1L, 3L, 2L, 1L, 2L, 5L, 5L, 2L, 2L, 2L, 5L, 1L, 2L, 2L,
2L, 5L, 2L, 1L, 5L, 1L, 1L, 1L, 5L, 1L, 2L, 2L, 2L, 2L, 5L, 1L,
1L, 5L, 2L, 5L, 2L, 2L, 2L, 5L, 6L, 2L, 2L, 1L, 6L, 2L, 1L, 5L,
1L, 5L, 1L, 2L, 2L, 2L, 5L, 2L, 2L, 2L, 1L, 5L, 2L, 5L, 1L, 2L,
2L, 2L, 2L, 1L, 2L, 1L, 3L, 5L, 2L, 2L, 1L, 2L, 2L, 2L, 5L, 2L,
2L, 2L, 5L, 2L, 5L, 5L, 5L, 5L, 2L, 1L, 2L, 5L, 2L, 2L, 1L, 2L,
2L, 2L, 1L, 5L, 2L, 2L, 2L, 1L, 5L, 1L, 5L, 5L, 2L, 1L, 2L, 1L,
2L, 2L, 1L, 5L, 2L, 2L, 5L, 2L, 5L, 2L, 2L, 2L, 1L, 1L, 5L, 2L,
2L, 2L, 2L, 5L, 1L, 5L, 1L, 2L, 2L, 2L, 5L, 5L, 2L, 1L, 1L, 2L,
5L, 5L, 1L, 5L, 2L, 5L, 5L, 2L, 1L, 2L, 5L, 1L, 1L, 2L, 2L, 5L,
1L, 1L, 5L, 1L, 2L, 1L, 2L, 2L, 1L, 2L, 5L, 5L, 5L, 2L, 1L, 2L,
2L, 1L, 1L, 2L, 1L, 2L, 1L, 5L, 2L, 2L, 1L, 1L, 1L, 2L, 2L, 1L,
3L, 5L, 5L, 2L, 1L, 1L, 5L, 2L, 1L, 2L, 2L, 5L, 1L, 2L, 2L, 5L,
1L, 5L, 1L, 2L, 2L, 2L, 2L, 2L, 5L, 2L, 1L, 5L, 5L, 2L, 2L, 5L,
1L, 2L, 2L, 2L, 6L, 2L, 2L, 2L, 3L, 2L, 5L, 5L, 1L, 1L, 1L, 1L,
2L, 5L, 1L, 2L, 5L, 2L, 5L, 2L, 5L, 1L, 2L, 2L, 2L, 1L, 5L, 1L,
1L, 5L, 2L, 2L, 1L, 2L, 5L, 2L, 1L, 2L, 5L, 2L, 1L, 2L, 5L, 2L,
1L, 2L, 2L, 5L, 2L, 1L, 2L, 2L, 5L, 2L, 1L, 1L, 1L, 3L, 2L, 2L,
2L, 2L, 5L, 2L, 1L, 5L, 5L, 1L, 2L, 2L, 5L, 2L, 2L, 2L, 1L, 2L,
1L, 1L, 2L, 2L, 6L, 2L, 1L, 2L, 1L, 5L, 2L, 1L, 5L, 2L, 2L, 1L,
2L, 5L, 1L, 2L, 1L, 2L, 2L, 2L, 1L, 5L, 2L, 1L, 2L, 2L, 2L, 1L,
1L, 1L, 2L, 5L, 2L, 5L, 1L, 2L, 2L, 5L, 2L, 2L, 2L, 6L, 1L, 2L,
5L, 6L, 5L, 2L, 6L, 2L, 5L, 2L, 2L, 2L, 2L, 1L, 2L, 1L, 5L, 2L,
2L, 2L, 1L, 2L, 2L, 2L, 1L, 2L, 2L, 5L, 2L, 2L, 5L, 5L, 1L, 2L,
2L, 1L, 1L, 5L, 3L, 2L, 2L, 2L, 1L, 2L, 2L, 5L, 2L, 2L, 2L, 2L,
1L, 2L, 2L, 5L, 1L, 2L, 2L, 2L, 2L, 5L, 2L, 5L, 2L, 5L, 1L, 1L,
5L, 5L, 2L, 2L, 2L, 2L, 5L, 2L, 6L, 1L, 1L, 1L, 2L, 5L, 5L, 2L,
5L, 2L, 2L, 2L, 2L, 1L, 5L, 2L, 1L, 5L, 2L, 2L, 1L, 1L, 5L, 5L,
2L, 2L, 2L, 2L, 1L, 5L, 2L, 2L, 9L, 2L, 2L, 2L, 2L, 1L, 2L, 2L,
5L, 2L, 5L, 5L, 1L, 2L, 2L, 1L, 5L, 6L, 2L, 2L, 1L, 2L, 1L, 2L,
1L, 5L, 5L, 1L, 1L, 5L, 2L, 1L, 1L, 2L, 1L, 2L, 2L, 2L, 1L, 2L,
6L, 6L, 1L, 2L, 5L, 2L, 2L, 2L, 5L, 4L, 1L, 1L, 5L, 2L, 2L, 5L,
5L, 2L, 2L, 1L, 2L, 1L, 2L, 2L, 1L, 5L, 1L, 1L, 2L, 1L, 1L, 2L,
2L, 2L, 2L, 1L, 2L, 2L, 2L, 5L, 5L, 2L, 2L, 1L, 2L, 2L, 2L, 2L,
1L, 2L, 5L, 2L, 1L, 2L, 2L, 1L, 2L, 5L, 1L, 5L, 2L, 2L, 5L, 5L,
5L, 1L, 5L, 2L, 1L, 5L, 2L, 5L, 2L, 2L, 5L, 1L, 5L, 2L, 2L, 2L,
1L, 2L, 1L, 5L, 2L, 2L, 3L, 5L, 2L, 2L, 1L, 5L, 1L, 2L, 2L, 1L,
5L, 2L, 1L, 1L, 3L, 1L, 2L, 2L, 2L, 1L, 1L, 2L, 1L, 5L, 2L, 1L,
1L, 2L, 2L, 2L, 2L, 2L, 5L, 3L, 5L, 2L, 5L, 5L, 2L, 2L, 2L, 2L,
1L, 2L, 2L, 5L, 1L, 2L, 1L, 1L, 2L, 2L, 2L, 2L, 2L, 6L, 1L, 1L,
5L, 5L, 5L, 2L, 1L, 5L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 2L, 2L,
2L, 5L, 2L, 6L, 1L, 1L, 5L, 1L, 1L, 2L, 5L, 1L, 2L, 2L, 5L, 1L,
2L, 1L, 5L, 1L, 2L, 1L, 1L, 1L, 5L, 1L, 5L, 1L, 1L, 1L, 1L, 1L,
2L, 2L, 5L, 5L, 5L, 1L, 5L, 1L, 2L, 2L, 2L, 2L, 1L, 1L, 2L, 6L,
5L, 5L, 1L, 2L, 2L, 2L, 2L, 2L, 5L, 6L, 2L, 1L, 2L, 2L, 1L, 2L,
2L, 2L, 5L, 5L, 2L, 1L, 1L, 2L, 2L, 2L, 2L, 5L, 5L, 2L, 2L, 5L,
2L, 2L, 1L, 2L, 5L, 2L, 2L, 1L, 5L, 1L, 1L, 1L, 2L, 5L, 5L, 2L,
2L, 5L, 2L, 1L, 1L, 2L, 2L, 1L, 1L, 5L, 1L, 2L, 2L, 2L, 2L, 1L,
2L, 2L, 1L, 5L, 2L, 2L, 2L, 2L, 1L, 2L, 2L, 1L, 2L, 1L, 5L, 2L,
2L, 2L, 5L, 2L, 1L, 1L, 2L, 2L, 2L, 2L, 1L, 2L, 5L, 2L, 2L, 2L,
1L, 1L, 2L, 1L, 2L, 5L, 2L, 2L, 5L, 2L, 2L, 5L, 5L, 1L, 1L, 2L,
1L, 1L, 2L, 2L, 2L, 2L, 1L, 1L, 5L, 5L, 1L, 2L, 2L, 5L, 5L, 2L,
5L, 2L, 2L, 2L, 5L, 2L, 1L, 2L, 2L, 2L, 2L, 5L, 2L, 1L, 2L, 2L,
1L, 2L, 2L, 2L, 2L, 1L, 2L, 2L, 5L, 2L, 5L, 6L, 1L, 1L, 5L, 2L,
2L, 1L, 1L, 2L, 5L, 2L, 2L, 2L, 1L, 2L, 2L, 2L, 2L, 2L, 2L, 2L,
2L, 1L, 2L, 2L, 1L, 2L, 2L, 5L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L,
6L, 1L, 1L, 2L, 2L, 5L, 2L, 1L, 2L, 5L, 1L, 2L, 2L, 5L, 1L, 2L,
2L, 5L, 2L, 5L, 2L, 2L, 5L, 2L, 2L, 1L, 2L, 5L, 1L, 6L, 2L, 2L,
2L, 1L, 1L, 2L, 1L, 2L, 2L, 2L, 5L, 2L, 1L, 5L, 2L, 2L, 2L, 2L,
2L, 1L, 5L, 6L, 2L, 1L, 2L, 2L, 5L, 2L, 1L, 2L, 1L, 1L, 1L, 1L,
2L, 5L, 2L, 2L, 5L, 2L, 5L, 6L, 2L, 2L, 2L, 1L, 1L, 1L, 2L, 1L,
5L, 1L, 5L, 2L, 2L, 5L, 2L, 5L, 5L, 5L, 2L, 2L, 2L, 2L, 5L, 2L,
2L, 2L, 2L, 1L, 6L, 5L, 1L, 2L, 2L, 2L, 2L, 5L, 5L, 2L, 2L, 2L,
2L, 2L, 2L, 1L, 2L, 2L, 2L, 2L, 2L, 2L, 5L, 2L, 5L, 2L, 1L, 5L,
2L, 5L, 2L, 5L, 2L, 5L, 2L, 1L, 2L, 2L, 2L, 1L, 5L, 2L, 2L, 2L,
2L, 2L, 5L, 1L, 2L, 1L, 2L, 2L, 2L, 5L, 2L, 2L, 2L, 2L, 1L, 5L,
2L, 2L, 2L, 2L, 1L, 2L, 2L, 2L, 2L, 2L, 5L, 2L, 5L, 1L, 5L, 2L,
5L, 2L, 2L, 5L, 5L, 2L, 5L, 2L, 2L, 2L, 5L, 2L, 5L, 2L, 5L, 2L,
2L, 1L, 1L, 2L, 2L, 2L, 5L, 5L, 2L, 2L, 2L, 5L, 2L, 1L, 1L, 1L,
5L, 1L, 1L, 1L, 2L, 1L, 5L, 2L, 1L, 1L, 2L, 2L, 2L, 1L, 5L, 3L,
1L, 2L, 2L, 1L, 5L, 5L, 5L, 1L, 1L, 1L, 2L, 2L, 2L, 1L), .Label = c("Flying",
"geen", "Grass", "Ice", "Poison", "Psychic", "Rock", "Steel",
"Water"), class = "factor")), .Names = c("OBJECTID..", "latitude",
"longitude", "pokemonId", "pokemon", "Type1", "Type2"), row.names = c(NA,
1999L), class = "data.frame")
View(data)
View(data)
View(data)
number <- function(pokemon) {
count <- 0
for (i in data$pokemon){
if (i == pokemon) {
count <- count + 1
}
}
return(count)
}
a = number("Abra")
print(a)
number("Pidgey")
num <- function(pokemon) {
count <- 0
for(i in data$pokemon) {
if(i == pokemon) {
count <- count + 1
}
}
return(count)
}
num("Abra")
levels(data)
levels(data$pokemon)
for(i in seq_along(levels(data$pokemon))) {
print(i)
number <- num(i)
}
for(i in seq_along(levels(data$pokemon))) {
print(names(data$pokemon))
number <- num(i)
}
highest <- 0
for(i in seq_along(levels(data$pokemon))) {
count <- num(data$pokemon[i])
if (i == 1){
highest <- count
} else if (count > highest) {
highest <- count
}
return(count)
}
poke <- ""
highest <- 0
for(i in seq_along(levels(data$pokemon))) {
count <- num(data$pokemon[i])
if (i == 1){
highest <- count
poke <- data$pokemon[i]
} else if (count > highest) {
highest <- count
poke <- data$pokemon[i]
}
}
print(poke)
print(highest)
poke <- ""
highest <- 0
for(i in seq_along(levels(data$pokemon))) {
count <- num(data$pokemon[i])
if (i == 1){
highest <- count
poke <- data$pokemon[i]
} else if (count > highest) {
highest <- count
poke <- data$pokemon[i]
}
}
print(poke)
poke <- ""
highest <- 0
for(i in seq_along(levels(data$pokemon))) {
count <- num(data$pokemon[i])
if (i == 1){
highest <- count
poke <- data$pokemon[[i]]
} else if (count > highest) {
highest <- count
poke <- data$pokemon[[i]]
}
}
print(poke)
print(highest)
poke <- ""
highest <- 0
for(i in seq_along(levels(data$pokemon))) {
count <- num(data$pokemon[i])
if (i == 1){
highest <- count
poke <- data$pokemon[[i]]
} else if (count > highest) {
highest <- count
poke <- data$pokemon[[i]]
}
}
print(paste(poke, "is the most frequent Pokemon with", highest))
lst <- list(1:10)
print(list)
lst <- 1:10
lst <- 1:10
class(lst)
lst <- 1:10
lst <- list(lst)
class(lst)
lst <- c("Eline", "Wout", "Wout", "Wout", "Wout", "Eline")
y <- factor(lst)
y
lst <- c("Eline", "Wout", "Wout", "Wout", "Wout", "Eline")
y <- factor(lst)
summary(y)
if (!require("tidyverse")) {
install.packages("tidyverse")
library("tidyverse")
}
if (!require("coin")) {
install.packages("coin")
library("coin")
}
if (!require("DeclareDesign")) {
install.packages("DeclareDesign")
library("DeclareDesign")
}
if (!require("dagitty")) {
install.packages("dagitty")
library("dagitty")
}
if (!require("Matching")) {
install.packages("Matching")
library("Matching")
}
if (!require("AER")) {
install.packages("AER")
library("AER")
}
if (!require("AER")) {
install.packages("AER")
library("AER")
}
if (!require("AER")) {
install.packages("AER")
library("AER")
}
if (!require("remotes")) {
install.packages("remotes")
}
if (!require("ECICourse")) {
remotes::install_github("jasonmtroos/ECICourse")
library("ECICourse")
}
if (!require("remotes")) {
install.packages("remotes")
}
if (!require("ECICourse")) {
remotes::install_github("jasonmtroos/ECICourse")
library("ECICourse")
}
if (!require("remotes")) {
install.packages("remotes")
}
if (!require("ECICourse")) {
remotes::install_github("jasonmtroos/ECICourse")
library("ECICourse")
}
count = 4
for(i in length(3)) {
count = count + i
}
print(count)
count = 4
for(i in length(3)) {
count = count + i
print(i)
}
print(count)
count = 4
for(i in 1:6) {
count = count + i
print(i)
}
print(count)
count = 4
for(i in 1:6) {
count <- count + i
}
print(count)
count = 4
for(i in 1:6) {
print(i)
count <- count + i
}
print(count)
install.packages("Rtools")
writeLines('PATH="${RTOOLS40_HOME}\\usr\\bin;${PATH}"', con = "~/.Renviron")
fieldexp <- get_ECI_data('module-4-tutorial')
library(ECICourse)
fieldexp <- get_ECI_data('module-4-tutorial')
fieldexp
fieldexp %>%
count(D)
library(tidyverse)
fieldexp %>%
count(D)
ggplot(fieldexp, aes(x = factor(D), y = Y)) +
geom_jitter(width = .1, height = .1) +
labs(x = 'D')
fieldexp %>%
group_by(D) %>%
summarise(Y = mean(Y))
fieldexp %>%
group_by(D) %>%
summarise(Y = mean(Y), .groups = 'drop') %>%
arrange(D) %>%
getElement('Y') %>%
diff()
ate
get_ATE <- function(df) {
df %>%
group_by(D) %>%
summarise(Y = mean(Y), .groups = 'drop') %>%
arrange(D) %>%
getElement('Y') %>%
diff()
}
ate <-
fieldexp %>%
get_ATE()
ate
choose(360, 160)
set.seed(1)             # so your results match mine
new_D <- sample(rep(0:1, 160), 320, replace = FALSE)
new_D
sum(new_D == 1)
sum(new_D == 0)
fieldexp %>%
mutate(D = new_D) %>%
get_ATE()
get_random_ATE_under_sharp_null <- function() {
new_D <- sample(rep(0:1, 160), 320, replace = FALSE)
fieldexp %>%
mutate(D = new_D) %>%
get_ATE()
}
# Import libraries
library(tidyverse)
possibilities <- expand.grid(1:6, 1:6, 1:6, 1:6, 1:6, 1:6)
View(possibilities)
View(possibilities)
df <- tibble{
Market = 1:6,
Y0 = c(10, 12, 14, 5, 15, 6, 8, 5)
Y1 = c(12, 12, 20, 6, 20, 6, 6, 10, 5)
}
df <- tibble(
Market = 1:6,
Y0 = c(10, 12, 14, 5, 15, 6, 8, 5)
Y1 = c(12, 12, 20, 6, 20, 6, 6, 10, 5)
)
df <- tibble(
Market = 1:6,
Y0 = c(10, 12, 14, 5, 15, 6, 8, 5),
Y1 = c(12, 12, 20, 6, 20, 6, 6, 10, 5)
)
df
df <- tibble(
Market = 1:6,
Y0 = c(10, 12, 14, 5, 15, 6, 8, 5),
Y1 = c(12, 12, 20, 6, 20, 6, 10, 5)
)
df <- tibble(
Market = 1:8,
Y0 = c(10, 12, 14, 5, 15, 6, 8, 5),
Y1 = c(12, 12, 20, 6, 20, 6, 10, 5)
)
View(df)
View(df)
x <- .10*.9 + .2*.2 + .35*2 + 2.5*.3 + 4.4*.05
x
x <- (.10*.9) + (.2*.2) + (.35*2) + (.3*2.5) + (4.4*.05)
x
setwd("C:/Users/eline/Documents/BAM/blok1/ASP/BAM_ASP_A2")
knitr::opts_chunk$set(warning = FALSE, message = FALSE,
comment = "", fig.height=2, fig.width=4, fig.align = "center")
# Set dir >> Eline
dir <- "C:/Users/eline/Documents/BAM/blok1/ASP/BAM_ASP_A2/"
# Load csv and generate subset containing only variables for interest
da.IV <- read.csv(file=paste0(dir, "data/IV_dataset.csv"), header=TRUE)
da.IV_sub <- subset(da.IV,select = c("age", "educ", "lnwage", "married", "qob",
"SMSA", "yob"))
# Convert to factor variables
da.IV_sub$married <- as.factor(da.IV_sub$married)
da.IV_sub$qob <- as.factor(da.IV_sub$qob)
da.IV_sub$SMSA <- as.factor(da.IV_sub$SMSA)
da.IV_sub$yob <- as.factor(da.IV_sub$yob)
# Define OLS models
rsltOLS.A <- lm(lnwage ~ educ, data=da.IV_sub)
rsltOLS.B <- lm(lnwage ~ educ + married + SMSA, data=da.IV_sub)
# Define IV model
rsltSLS.A <- ivreg(lnwage ~ educ | qob, data=da.IV_sub)
library(tidyverse)
library(stargazer)
library(dagitty)
library(gridExtra)
library(tinytex)
library(stargazer)
library(AER)
library(ivpack)
# Set dir >> Eline
dir <- "C:/Users/eline/Documents/BAM/blok1/ASP/BAM_ASP_A2/"
# Load csv and generate subset containing only variables for interest
da.IV <- read.csv(file=paste0(dir, "data/IV_dataset.csv"), header=TRUE)
da.IV_sub <- subset(da.IV,select = c("age", "educ", "lnwage", "married", "qob",
"SMSA", "yob"))
# Convert to factor variables
da.IV_sub$married <- as.factor(da.IV_sub$married)
da.IV_sub$qob <- as.factor(da.IV_sub$qob)
da.IV_sub$SMSA <- as.factor(da.IV_sub$SMSA)
da.IV_sub$yob <- as.factor(da.IV_sub$yob)
# Define OLS models
rsltOLS.A <- lm(lnwage ~ educ, data=da.IV_sub)
rsltOLS.B <- lm(lnwage ~ educ + married + SMSA, data=da.IV_sub)
# Define IV model
rsltSLS.A <- ivreg(lnwage ~ educ | qob, data=da.IV_sub)
rsltSLS.B <- ivreg(lnwage ~ educ + married + SMSA | married + SMSA + qob,
data=da.IV_sub)
rsltSLS.C <- ivreg(lnwage ~ educ + married + SMSA | married + SMSA + age + qob,
data=da.IV_sub)
# Generate table containing both models
stargazer(rsltOLS.A, rsltOLS.B, rsltSLS.A, rsltSLS.B, rsltSLS.C, type="text")
# Test for violation over-identification
summary(rsltSLS.A, diagnostics = TRUE)
summary(rsltSLS.B, diagnostics = TRUE)
summary(rsltSLS.C, diagnostics = TRUE)
knitr::opts_chunk$set(warning = FALSE, message = FALSE,
comment = "", fig.height=2, fig.width=4, fig.align = "center")
# Load libraries
library(tidyverse)
library(stargazer)
library(dagitty)
library(gridExtra)
library(tinytex)
library(stargazer)
library(AER)
library(ivpack)
g1.1 <- ggplot(data = hp, aes(LotArea, SalePrice)) +
geom_point(size = 0.5) +
geom_smooth(method = "lm", color = "blue", alpha = 0.2)  +
geom_smooth(color = "red", alpha = 0.2) +
theme_bw() +
labs(caption = "Figure 1.1") +
theme(plot.caption =  element_text(hjust = 0.5, size = 12, face = "bold"))
